name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: finance_user
          POSTGRES_PASSWORD: supersecret
          POSTGRES_DB: finance_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U finance_user -d finance_db"
          --health-interval 2s
          --health-timeout 2s
          --health-retries 10

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: finance_db
      DB_USER: finance_user
      DB_PASSWORD: supersecret
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      IMAGE_NAME: MohamedAmin1996/finance-tracker-app

    steps:
      # 1. Checkout latest code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup .NET SDK
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 3. Install dotnet tools (optional lint/format tools)
      - name: Install dotnet format
        run: dotnet tool install -g dotnet-format

      # 4. Run linting / code style check
      - name: Run dotnet format (check only)
        run: dotnet format --verify-no-changes

      # 5. Restore dependencies
      - name: Restore dependencies
        run: dotnet restore FinanceTrackerApp/FinanceTrackerApp.csproj

      # 6. Build the project
      - name: Build project
        run: dotnet build finance-tracker-csharp.sln --configuration Release 

      # 7. Run unit tests (wait for postgres)
      - name: Run xUnit tests
        run: dotnet test FinanceTrackerAppTest/FinanceTrackerAppTest.csproj --configuration Release --verbosity normal

      # 8. Publish the project
      - name: Publish project
        run: dotnet publish FinanceTrackerApp/FinanceTrackerApp.csproj -c Release -o ./publish

      # 9. Build Docker image
      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      # 10. Run container to test
      - name: Run Docker container
        run: |
          docker run -d --name test-container \
          -e DB_HOST=host.docker.internal \
          -e DB_PORT=5432 \
          -e DB_NAME=finance_db \
          -e DB_USER=finance_user \
          -e DB_PASSWORD=supersecret \
          $IMAGE_NAME
          sleep 5
          docker logs test-container

      # 11. Stop and remove container
      - name: Clean up Docker container
        run: |
          docker stop test-container
          docker rm test-container

      # 12. Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: DOCKER_HUB_USERNAME
          password: DOCKER_HUB_PASSWORD

      # 13. Push Docker image
      - name: Push Docker image
        run: docker push $IMAGE_NAME
